import fetch from 'node-fetch'
import { addExif } from '../lib/sticker.js'
import { sticker } from '../lib/sticker.js'
import uploadFile from '../lib/uploadFile.js'
import uploadImage from '../lib/uploadImage.js'
import { webp2png } from '../lib/webp2mp4.js'
import { Sticker } from 'wa-sticker-formatter'
let handler = async (m, { conn, text, command, args }) => {
if (args[0] && args[0].match(/(https:\/\/t.me\/addstickers\/)/gi)) {
let stiker = false
conn.sendMessage(m.chat, {react: { text: "‚è∞", key: m.key }})
  let reis = await fetch("https://api.zahwazein.xyz/downloader/telesticker?apikey=zenzkey_1639ccd633&url=" + text)
  let resu = await reis.json()  
 /* if (m.isGroup && resu.result.sticker.length > 121) {
await m.reply('O n√∫mero de figurinhas √© maior que 50, ser√° enviado no chat privado.')
for (let i = 0; i < resu.result.sticker.length; i++) {
const stikers = await sticker(false, resu.result.sticker[i], '·¥ç·¥Ä·¥Ö·¥á  ô è\nÍú∞·¥á…™·¥õ·¥Ä  ô è\n…™…¥Íú±·¥õ·¥Ä…¢ Ä·¥Ä·¥ç', `·¥ç·¥Ä ü…™·¥Ä  Ä·¥è ô·¥è·¥õ „Çø\n${m.pushName}\n·¥Ö·¥Ä·¥†…™·¥Ö.s·¥è·¥ús·¥¢`)
conn.sendFile(m.sender, stikers, null, { asSticker: true }, m, true, { contextInfo: { 'forwardingScore': 999999, 'isForwarded': true }})
}
} else {*/
  // resu = await fetchJson(`https://raw.githubusercontent.com/shoukosagiri-poi/swenson-web-vercel/main/anjime.json`)
  // console.log(resu)
  for (let i = 0; i < resu.result.sticker.length; i++) {
console.log(resu.result)
const stikers = await sticker(false, resu.result.sticker[i], '‚ÜìüßÅ‚Éü MŒ±‚ÑìŒπŒ± Ro…ìŒøœÑ\n‚§∑fir3.net/malia-md\n\n‚Üìüåà‚Éü M·¥á…¥sŒ±…¢·¥á·¥ç  ô·¥è·¥õ\n‚§∑cœÉ·¥ç·¥ò ü·¥á·¥õŒ±·¥ÖŒ±!', `‚Üìüçì‚Éü C ÄŒπŒ±·¥ÖŒ± ·¥ò·¥è Ä\n‚§∑@david.sousz\n\n‚ÜìüßÉ‚Éü F·¥áŒπœÑŒ± ·¥òŒø Ä\n‚§∑${m.pushName}`)
conn.sendFile(m.chat, stikers, null, { asSticker: true }, m, true, { contextInfo: { 'forwardingScore': 999999, 'isForwarded': true }})
}
await conn.sendMessage(m.chat, {react: { text: "‚úÖ", key: m.key }})
//}
}
}
handler.help = ['cajafuerte']
handler.tags = ['owner']
handler.command = /^(telesticker)$/i
handler.rowner = true
handler.fail = null
export default handler